Before running everything:

npm install mongoose express method-override 
set path using const path = require('path')
set views dulu using 

app.set('views',path.join(__dirname,"views"));
app.use(express.urlencoded({ extended: true })); //parsing the url body
app.use(methodOverride("_method"));

REUSABLE CODE:
PACKAGES ejs-mate using boiler plates. (Partials and included in the tem)

Bootstrap 5 Not demands on jquery anymore, input in the index
Separate Popper in the introudctions

navbar
<%- include('../partials/navbar.ejs')%>

flexbox
mt-auto so when the body doens't take 100%, it still listed as 100% 
db.campgrounds.find()
use yelp-camp

using cards

Bootstrap Express Javascrip

ini ada di schema 
name="rumaku[description]"

d-inline inline styling


client side form validations , 

error handling with joi

Authentication using pasport library in node.js

npm install passport passport-local passport-local-mongoose
Authorization for users and non users 

UserSchema use the plugin to give you a unique validation middleware

$pull array (remove from array mongo. pulling an array. and delee the entire reveiw)

campground delte middleware (delete review when you associate a campgroudn)

Querry middleware using findOneAndDelete, once you find the doc, you can delete it 

Configuring session:
npm i express-session

Configuring Flash:
npm i connect-flash
Adding all the success request to the template variable and treat them as a local success

Under routes, we can use passport.authenticate

Protecting campgrouds unless you are signed in 
Check authentication, currently sign in or not

annoying thing in express router, they keep the param separate, we don't have the id, in separte params
there fore we need mergeParams: true therefore we have the id 

Serving Static Assets. 

login and logout
